CREATE TABLE TALLYDB.COMPANY (
	 COMPANY_ID				VARCHAR(10)  	NOT NULL,
     COMPANY_NAME 			VARCHAR(100) 	NOT NULL,
     CREATED_DATE   		DATE NOT NULL,
     CHECK_FLAG				BOOLEAN,
     PRIMARY KEY  (COMPANY_ID)
);

##trial balance
CREATE TABLE TALLYDB.TRIAL_BALANCE (
	 TALLY_SUMMARY_ID 		INT UNSIGNED  	NOT NULL AUTO_INCREMENT,
     REPORT_ID INT UNSIGNED   NOT NULL,
     REPORT_KEY 			VARCHAR(100) 	NOT NULL,
     REPORT_VALUE1			VARCHAR(100),
     REPORT_VALUE2			VARCHAR(100),
     CREATED_DATE   		DATE NOT NULL,
     CHECK_FLAG				BOOLEAN,
	 COMPANY_ID				VARCHAR(10)  	NOT NULL,	
	 FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID), 
     PRIMARY KEY  (TALLY_SUMMARY_ID)
);


--day book
CREATE TABLE TALLYDB.DAYBOOK_MASTER(
	VOUCHER_KEY	VARCHAR(25) NOT NULL,
	VCH_TYPE VARCHAR(100),
	VOUCHER_DATE DATE,
	VOUCHER_NUMBER VARCHAR(25),
	PARTY_LEDGER_NAME VARCHAR(100),
	EFFECTIVE_DATE	DATE,
	MASTER_ID	VARCHAR(25),
	FLAG boolean, 
	CREATED_DATE	DATE,
	MODIFIED_DATE	DATE,
	COMPANY_ID				VARCHAR(10)  	NOT NULL,	 
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID),
	PRIMARY KEY (VOUCHER_KEY, COMPANY_ID)
);

CREATE TABLE TALLYDB.DAYBOOK_INVENTORY(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	STOCK_ITEM_NAME VARCHAR(100),
	AMOUNT DECIMAL(10,2),
	RATE VARCHAR(100),
	BILLED_QTY VARCHAR(100),
	VOUCHER_KEY	VARCHAR(25) NOT NULL, 
	CREATED_DATE	DATE,
	MODIFIED_DATE	DATE,
	COMPANY_ID				VARCHAR(10)  	NOT NULL,		
	PRIMARY KEY (ID),
	FOREIGN KEY (VOUCHER_KEY) REFERENCES DAYBOOK_MASTER(VOUCHER_KEY),
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID)
	);

CREATE TABLE TALLYDB.DAYBOOK_LEDGER(
	ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	LEDGER_NAME VARCHAR(100),
	AMOUNT DECIMAL(10,2),
	VOUCHER_KEY	VARCHAR(25) NOT NULL,
	CREATED_DATE	DATE,
	MODIFIED_DATE	DATE,
	COMPANY_ID				VARCHAR(10)  	NOT NULL,	
	PRIMARY KEY (ID),
	FOREIGN KEY (VOUCHER_KEY) REFERENCES DAYBOOK_MASTER(VOUCHER_KEY),
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID)
	);

--Stock detail
CREATE TABLE TALLYDB.STOCK_MASTER(
	VOUCHER_TYPE VARCHAR(100),
	DATE_ENT	DATE,
	VOUCHER_NUMBER	VARCHAR(25),
	VOUCHER_KEY		VARCHAR(25) NOT NULL,
	EFFECTIVE_DATE	DATE,
	MASTER_ID		VARCHAR(25),
	OPR_DATE	DATE,
	REEL_WEIGHT	VARCHAR(15),
	START_TIME	VARCHAR(15),
	REWIND_START	VARCHAR(15),
	REWIND_END	VARCHAR(15),
	OPERATED_BY 	VARCHAR(100),
	FOREMAN1	VARCHAR(100),
	FOREMAN2	VARCHAR(100),
	CREATED_DATE	DATE,
	MODIFIED_DATE	DATE,
	COMPANY_ID				VARCHAR(10)  	NOT NULL,
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID),	
	PRIMARY KEY (VOUCHER_KEY) 
);

CREATE TABLE TALLYDB.STOCK_DETAILS(
	STOCK_DETAILS_ID VARCHAR(50) NOT NULL,
	STOCK_ITEM_NAME 	VARCHAR(100),
	RATE	VARCHAR(25),
	AMOUNT	DECIMAL(10,2),
	BILLED_QTY	VARCHAR(100),
	STATUS	VARCHAR(10),
	VOUCHER_KEY	VARCHAR(25),
	CREATED_DATE	DATE,
	MODIFIED_DATE	DATE,
	COMPANY_ID				VARCHAR(10)  	NOT NULL,	
	PRIMARY KEY (STOCK_DETAILS_ID),
	FOREIGN KEY (VOUCHER_KEY) REFERENCES STOCK_MASTER(VOUCHER_KEY),
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID)
);

CREATE TABLE TALLYDB.STOCK_ITEM_DETAILS(
	STOCK_ITEM_DETAILS_ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	BATCH_NAME 	VARCHAR(100),
	RATE	VARCHAR(25),
	AMOUNT	DECIMAL(10,2),
	BILLED_QTY	VARCHAR(100),
	GSM_TGT	DECIMAL(10,2),
	GSM_ACT	DECIMAL(10,2),
	BF_TGT	DECIMAL(10,2),
	BF_ACT	DECIMAL(10,2),
	COBB	DECIMAL(10,2),
	REEL_LEN	DECIMAL(10,2),
	JOINTS	DECIMAL(10,2),
	REEL_DIA	DECIMAL(10,2),
	MOIST	DECIMAL(10,2),
	SIZE_TGT	DECIMAL(10,2),
	SIZE_ACT	DECIMAL(10,2),
	UNITS	VARCHAR(25),
	VOUCHER_KEY	VARCHAR(25),
	STOCK_DETAILS_ID VARCHAR(50),
	CREATED_DATE	DATE,
	MODIFIED_DATE	DATE,
	COMPANY_ID				VARCHAR(10)  	NOT NULL,	
	PRIMARY KEY (STOCK_ITEM_DETAILS_ID),
	FOREIGN KEY (STOCK_DETAILS_ID) REFERENCES STOCK_DETAILS(STOCK_DETAILS_ID),
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID)
);	


CREATE TABLE TALLYDB.HISTORY_DATA(
	HISTORY_DATA_ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
	GROUP_NAME 	VARCHAR(100),
	AMOUNT	BIGINT,
	FREQUENCY	VARCHAR(100),
	DAY	VARCHAR(50),
	MONTH	VARCHAR(50),
	YEAR	VARCHAR(50),
	STATUS	VARCHAR(25),
	LAST_UPDATED	DATE,
	COMPANY_ID				VARCHAR(10)  	NOT NULL,
	PRIMARY KEY (HISTORY_DATA_ID),
	FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY(COMPANY_ID)
);
	
CREATE TABLE TALLYDB.ROLE(
ROLE_ID INT UNSIGNED  	NOT NULL AUTO_INCREMENT, 
ROLE_NAME	varchar(25), 
PRIMARY KEY (ROLE_ID)
);


CREATE TABLE TALLYDB.USERS(
USER_NAME	varchar(100), 
PWD	varchar(100), 
ROLE_ID	INT UNSIGNED NOT NULL, 
ACCESS	varchar(10),  
USER_STATUS	varchar(10) NOT NULL,  
CREATED_DATE	date, 
MODIFIED_DATE	date, 
COMPANY_ID	varchar(10) NOT NULL, 
URL	varchar(200) ,
PRIMARY KEY (USER_NAME),
FOREIGN KEY (COMPANY_ID) REFERENCES TALLYDB.COMPANY(COMPANY_ID),
FOREIGN KEY (ROLE_ID) REFERENCES TALLYDB.ROLE(ROLE_ID)
);


CREATE TABLE TALLYDB.MESSAGE(
MESSAGE_ID INT UNSIGNED NOT NULL AUTO_INCREMENT,
MESSAGE	varchar(500), 
URL	varchar(200), 
ROLE_ID	INT UNSIGNED NOT NULL, 
STATUS	varchar(10),  
CREATED_DATE	date, 
COMPANY_ID	varchar(10) NOT NULL, 
PRIMARY KEY (MESSAGE_ID),
FOREIGN KEY (COMPANY_ID) REFERENCES TALLYDB.COMPANY(COMPANY_ID),
FOREIGN KEY (ROLE_ID) REFERENCES TALLYDB.ROLE(ROLE_ID)
);

drop table TALLYDB.DAYBOOK_INVENTORY;
drop table TALLYDB.STOCK_DETAIL;
drop table inventory.stock_details;
drop table inventory.stock_master;

SET SQL_SAFE_UPDATES = 0;

delete from TALLYDB.STOCK_ITEM_DETAILS;
delete from TALLYDB.STOCK_DETAILS;
delete from TALLYDB.STOCK_MASTER;